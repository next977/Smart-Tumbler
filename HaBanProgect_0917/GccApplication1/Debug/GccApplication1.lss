
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  000009b8  00000a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000074  00800136  00800136  00000a82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ae0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000500  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001f2  00000000  00000000  00001074  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047b  00000000  00000000  00001266  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  000016e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000024d  00000000  00000000  000017ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000018e  00000000  00000000  000019f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00001b87  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 eb       	ldi	r30, 0xB8	; 184
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 33       	cpi	r26, 0x36	; 54
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e3       	ldi	r26, 0x36	; 54
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 3a       	cpi	r26, 0xAA	; 170
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ad d0       	rcall	.+346    	; 0x21e <main>
  c4:	77 c4       	rjmp	.+2286   	; 0x9b4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Uart_Init>:
unsigned char Uart_Rx(void)
{
	while( !(UCSR0A & 0x80) );

	return UDR0;
}
  c8:	1b b8       	out	0x0b, r1	; 11
  ca:	88 e1       	ldi	r24, 0x18	; 24
  cc:	8a b9       	out	0x0a, r24	; 10
  ce:	86 e0       	ldi	r24, 0x06	; 6
  d0:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
  d4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
  d8:	83 e3       	ldi	r24, 0x33	; 51
  da:	89 b9       	out	0x09, r24	; 9
  dc:	08 95       	ret

000000de <Uart_Tx>:
  de:	5d 9b       	sbis	0x0b, 5	; 11
  e0:	fe cf       	rjmp	.-4      	; 0xde <Uart_Tx>
  e2:	8c b9       	out	0x0c, r24	; 12
  e4:	08 95       	ret

000000e6 <Uart_Tx_Str>:
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	ec 01       	movw	r28, r24
  ec:	88 81       	ld	r24, Y
  ee:	88 23       	and	r24, r24
  f0:	29 f0       	breq	.+10     	; 0xfc <Uart_Tx_Str+0x16>
  f2:	21 96       	adiw	r28, 0x01	; 1
  f4:	f4 df       	rcall	.-24     	; 0xde <Uart_Tx>
  f6:	89 91       	ld	r24, Y+
  f8:	81 11       	cpse	r24, r1
  fa:	fc cf       	rjmp	.-8      	; 0xf4 <Uart_Tx_Str+0xe>
  fc:	df 91       	pop	r29
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <TWI_RD>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	ef e9       	ldi	r30, 0x9F	; 159
 104:	ff e0       	ldi	r31, 0x0F	; 15
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <TWI_RD+0x4>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <TWI_RD+0xa>
 10c:	00 00       	nop
unsigned int TWI_RD(unsigned char slv_add, unsigned char regi)
{
	_delay_ms(1);
	unsigned int result;

	TWCR = 0xa4;                    //TWINT의 값 1, TWSTA의 값을 1로 설정하면 마스터가 되고 버스상에 START조건을 생성
 10e:	94 ea       	ldi	r25, 0xA4	; 164
 110:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	//TWEN의 값을 1로 설정하여 TWI를 활성화
	while((TWCR & 0x80) == 0x00 || (TWSR & 0xf8) != 0x08);   //TWINT의 값을 클리어 함으로써 TWI동작 시작
 114:	e4 e7       	ldi	r30, 0x74	; 116
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	a1 e7       	ldi	r26, 0x71	; 113
 11a:	b0 e0       	ldi	r27, 0x00	; 0
 11c:	90 81       	ld	r25, Z
 11e:	99 23       	and	r25, r25
 120:	ec f7       	brge	.-6      	; 0x11c <TWI_RD+0x1a>
 122:	9c 91       	ld	r25, X
 124:	98 7f       	andi	r25, 0xF8	; 248
 126:	98 30       	cpi	r25, 0x08	; 8
 128:	c9 f7       	brne	.-14     	; 0x11c <TWI_RD+0x1a>

	TWDR = slv_add;                 //슬레이브 어드레스
 12a:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = 0x84;      //ACK
 12e:	94 e8       	ldi	r25, 0x84	; 132
 130:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 134:	e4 e7       	ldi	r30, 0x74	; 116
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	90 81       	ld	r25, Z
 13a:	99 23       	and	r25, r25
 13c:	ec f7       	brge	.-6      	; 0x138 <TWI_RD+0x36>

	TWDR = regi;      //reg 선택
 13e:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = 0x84;      //ACK
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 148:	e4 e7       	ldi	r30, 0x74	; 116
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	90 81       	ld	r25, Z
 14e:	99 23       	and	r25, r25
 150:	ec f7       	brge	.-6      	; 0x14c <TWI_RD+0x4a>

	TWCR = 0xa4;      //restart
 152:	94 ea       	ldi	r25, 0xA4	; 164
 154:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 158:	e4 e7       	ldi	r30, 0x74	; 116
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	90 81       	ld	r25, Z
 15e:	99 23       	and	r25, r25
 160:	ec f7       	brge	.-6      	; 0x15c <TWI_RD+0x5a>

	TWDR = slv_add+1;
 162:	8f 5f       	subi	r24, 0xFF	; 255
 164:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = 0x84;
 168:	84 e8       	ldi	r24, 0x84	; 132
 16a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 16e:	e4 e7       	ldi	r30, 0x74	; 116
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	88 23       	and	r24, r24
 176:	ec f7       	brge	.-6      	; 0x172 <TWI_RD+0x70>

	TWCR = 0x84;      //NOACK
 178:	84 e8       	ldi	r24, 0x84	; 132
 17a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 17e:	e4 e7       	ldi	r30, 0x74	; 116
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	88 23       	and	r24, r24
 186:	ec f7       	brge	.-6      	; 0x182 <TWI_RD+0x80>
	result = TWDR;
 188:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>

	TWCR = 0x94;      //stop
 18c:	94 e9       	ldi	r25, 0x94	; 148
 18e:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	return result;
}
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	08 95       	ret

00000196 <TWI_WR>:
 196:	ef e9       	ldi	r30, 0x9F	; 159
 198:	ff e0       	ldi	r31, 0x0F	; 15
 19a:	31 97       	sbiw	r30, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <TWI_WR+0x4>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <TWI_WR+0xa>
 1a0:	00 00       	nop
unsigned int TWI_WR(unsigned char slv_add, unsigned char regi, unsigned char data)
{
	_delay_ms(1);
	unsigned int result;

	TWCR = 0xa4;      //start
 1a2:	94 ea       	ldi	r25, 0xA4	; 164
 1a4:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 1a8:	e4 e7       	ldi	r30, 0x74	; 116
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	90 81       	ld	r25, Z
 1ae:	99 23       	and	r25, r25
 1b0:	ec f7       	brge	.-6      	; 0x1ac <TWI_WR+0x16>
	//Uart_Tx('1');
	TWDR = slv_add;
 1b2:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = 0x84;      //ACK
 1b6:	84 e8       	ldi	r24, 0x84	; 132
 1b8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 1bc:	e4 e7       	ldi	r30, 0x74	; 116
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	88 23       	and	r24, r24
 1c4:	ec f7       	brge	.-6      	; 0x1c0 <TWI_WR+0x2a>
	//Uart_Tx('2');
	TWDR = regi;      //reg 선택
 1c6:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = 0x84;      //ACK
 1ca:	84 e8       	ldi	r24, 0x84	; 132
 1cc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 1d0:	e4 e7       	ldi	r30, 0x74	; 116
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	88 23       	and	r24, r24
 1d8:	ec f7       	brge	.-6      	; 0x1d4 <TWI_WR+0x3e>
	//Uart_Tx('3');
	TWDR = data;      //reg 선택
 1da:	40 93 73 00 	sts	0x0073, r20	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = 0x84;      //ACK
 1de:	84 e8       	ldi	r24, 0x84	; 132
 1e0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while((TWCR & 0x80) == 0x00);
 1e4:	e4 e7       	ldi	r30, 0x74	; 116
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	88 23       	and	r24, r24
 1ec:	ec f7       	brge	.-6      	; 0x1e8 <TWI_WR+0x52>
	//Uart_Tx('4');
	TWCR = 0x94;      //stop
 1ee:	84 e9       	ldi	r24, 0x94	; 148
 1f0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	return result;

}
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	08 95       	ret

000001fa <TWI_Init>:
void TWI_Init(void)
{
	TWBR = 12;      //속도 설정
 1fa:	8c e0       	ldi	r24, 0x0C	; 12
 1fc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	TWSR = 0;      //상태레지스터 초기화
 200:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
	TWCR = 0x01;   //제어레지스터 초기화
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 20a:	2f ef       	ldi	r18, 0xFF	; 255
 20c:	81 ee       	ldi	r24, 0xE1	; 225
 20e:	94 e0       	ldi	r25, 0x04	; 4
 210:	21 50       	subi	r18, 0x01	; 1
 212:	80 40       	sbci	r24, 0x00	; 0
 214:	90 40       	sbci	r25, 0x00	; 0
 216:	e1 f7       	brne	.-8      	; 0x210 <TWI_Init+0x16>
 218:	00 c0       	rjmp	.+0      	; 0x21a <TWI_Init+0x20>
 21a:	00 00       	nop
 21c:	08 95       	ret

0000021e <main>:
	_delay_ms(100);
}
int main(void)
{
	DDRD = 0x03;
 21e:	83 e0       	ldi	r24, 0x03	; 3
 220:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x03;
 222:	82 bb       	out	0x12, r24	; 18
	DDRA = 0xff;
 224:	8f ef       	ldi	r24, 0xFF	; 255
 226:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x00;
 228:	1b ba       	out	0x1b, r1	; 27
	DDRB = 0xff;
 22a:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x00;
 22c:	18 ba       	out	0x18, r1	; 24
	unsigned char turn=0;
	unsigned char rx_data = 0; //수신 데이터 저장할 변수
	
	Uart_Init(); //UART 통신 설정
 22e:	4c df       	rcall	.-360    	; 0xc8 <Uart_Init>
	TWI_Init();
 230:	e4 df       	rcall	.-56     	; 0x1fa <TWI_Init>
 232:	8f e3       	ldi	r24, 0x3F	; 63
 234:	9c e9       	ldi	r25, 0x9C	; 156
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <main+0x18>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0x1e>
 23c:	00 00       	nop
	_delay_ms(10);

	TWI_WR(0xd0, 0x6b, 0x00); //스탠바이 ON
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	6b e6       	ldi	r22, 0x6B	; 107
 242:	80 ed       	ldi	r24, 0xD0	; 208
 244:	a8 df       	rcall	.-176    	; 0x196 <TWI_WR>
 246:	9f ef       	ldi	r25, 0xFF	; 255
 248:	21 ee       	ldi	r18, 0xE1	; 225
 24a:	84 e0       	ldi	r24, 0x04	; 4
 24c:	91 50       	subi	r25, 0x01	; 1
 24e:	20 40       	sbci	r18, 0x00	; 0
 250:	80 40       	sbci	r24, 0x00	; 0
 252:	e1 f7       	brne	.-8      	; 0x24c <main+0x2e>
 254:	00 c0       	rjmp	.+0      	; 0x256 <main+0x38>
 256:	00 00       	nop
	_delay_ms(100);
	TWI_WR(0xd0, 0x6c, 0x00);
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	6c e6       	ldi	r22, 0x6C	; 108
 25c:	80 ed       	ldi	r24, 0xD0	; 208
 25e:	9b df       	rcall	.-202    	; 0x196 <TWI_WR>
 260:	9f ef       	ldi	r25, 0xFF	; 255
 262:	21 ee       	ldi	r18, 0xE1	; 225
 264:	84 e0       	ldi	r24, 0x04	; 4
 266:	91 50       	subi	r25, 0x01	; 1
 268:	20 40       	sbci	r18, 0x00	; 0
 26a:	80 40       	sbci	r24, 0x00	; 0
 26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x48>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <main+0x52>
 270:	00 00       	nop
	_delay_ms(100);
	TWI_WR(0xd0,0x1b,0x08);// gyro 설정, 최대 500도/s로 설정
 272:	48 e0       	ldi	r20, 0x08	; 8
 274:	6b e1       	ldi	r22, 0x1B	; 27
 276:	80 ed       	ldi	r24, 0xD0	; 208
 278:	8e df       	rcall	.-228    	; 0x196 <TWI_WR>
 27a:	9f ef       	ldi	r25, 0xFF	; 255
 27c:	21 ee       	ldi	r18, 0xE1	; 225
 27e:	84 e0       	ldi	r24, 0x04	; 4
 280:	91 50       	subi	r25, 0x01	; 1
 282:	20 40       	sbci	r18, 0x00	; 0
 284:	80 40       	sbci	r24, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <main+0x62>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0x6c>
 28a:	00 00       	nop
	_delay_ms(100);
	TWI_WR(0xd0,0x1c,0x08);// accel 설정, 최대 4g 로 설정
 28c:	48 e0       	ldi	r20, 0x08	; 8
 28e:	6c e1       	ldi	r22, 0x1C	; 28
 290:	80 ed       	ldi	r24, 0xD0	; 208
 292:	81 df       	rcall	.-254    	; 0x196 <TWI_WR>
 294:	9f ef       	ldi	r25, 0xFF	; 255
 296:	21 ee       	ldi	r18, 0xE1	; 225
 298:	84 e0       	ldi	r24, 0x04	; 4
 29a:	91 50       	subi	r25, 0x01	; 1
 29c:	20 40       	sbci	r18, 0x00	; 0
 29e:	80 40       	sbci	r24, 0x00	; 0
 2a0:	e1 f7       	brne	.-8      	; 0x29a <main+0x7c>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <main+0x86>
 2a4:	00 00       	nop
	PORTD = 0x03;
	DDRA = 0xff;
	PORTA = 0x00;
	DDRB = 0xff;
	PORTB = 0x00;
	unsigned char turn=0;
 2a6:	10 e0       	ldi	r17, 0x00	; 0
		if(turn==10)
		{
			
			if((abs(G_X)>=1000)||(abs(G_Y)>=1000)||(abs(G_Z)>=1000))
			{
				PORTA = 0x01;
 2a8:	dd 24       	eor	r13, r13
 2aa:	d3 94       	inc	r13
				_delay_ms(500);
				PORTA = 0x00;	
				sprintf((char*)str1, " G_X = %3.2d, G_Y = %3.2d, G_Z = %3.2d, Temp = %3.2d", G_X,G_Y,G_Z,temp);
 2ac:	0f 2e       	mov	r0, r31
 2ae:	f0 e0       	ldi	r31, 0x00	; 0
 2b0:	af 2e       	mov	r10, r31
 2b2:	f1 e0       	ldi	r31, 0x01	; 1
 2b4:	bf 2e       	mov	r11, r31
 2b6:	f0 2d       	mov	r31, r0
 2b8:	c1 e4       	ldi	r28, 0x41	; 65
 2ba:	d1 e0       	ldi	r29, 0x01	; 1
			/*if(abs(temp))
			{
				
			}
			*/
			turn=0;
 2bc:	e1 2c       	mov	r14, r1
	_delay_ms(100);
	
	while(1)
	{
	
		G_X_h = TWI_RD(0xd0, 0x43);
 2be:	63 e4       	ldi	r22, 0x43	; 67
 2c0:	80 ed       	ldi	r24, 0xD0	; 208
 2c2:	1f df       	rcall	.-450    	; 0x102 <TWI_RD>
 2c4:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
		G_X_l = TWI_RD(0xd0, 0x44);
 2c8:	64 e4       	ldi	r22, 0x44	; 68
 2ca:	80 ed       	ldi	r24, 0xD0	; 208
 2cc:	1a df       	rcall	.-460    	; 0x102 <TWI_RD>
 2ce:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <G_X_l>
		G_Y_h = TWI_RD(0xd0, 0x45);
 2d2:	65 e4       	ldi	r22, 0x45	; 69
 2d4:	80 ed       	ldi	r24, 0xD0	; 208
 2d6:	15 df       	rcall	.-470    	; 0x102 <TWI_RD>
 2d8:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <G_Y_h>
		G_Y_l = TWI_RD(0xd0, 0x46);
 2dc:	66 e4       	ldi	r22, 0x46	; 70
 2de:	80 ed       	ldi	r24, 0xD0	; 208
 2e0:	10 df       	rcall	.-480    	; 0x102 <TWI_RD>
 2e2:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <G_Y_l>
		G_Z_h = TWI_RD(0xd0, 0x47);
 2e6:	67 e4       	ldi	r22, 0x47	; 71
 2e8:	80 ed       	ldi	r24, 0xD0	; 208
 2ea:	0b df       	rcall	.-490    	; 0x102 <TWI_RD>
 2ec:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <G_Z_h>
		G_Z_l = TWI_RD(0xd0, 0x48);
 2f0:	68 e4       	ldi	r22, 0x48	; 72
 2f2:	80 ed       	ldi	r24, 0xD0	; 208
 2f4:	06 df       	rcall	.-500    	; 0x102 <TWI_RD>
 2f6:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <G_Z_l>

		G_X = ((G_X_h << 8) | G_X_l);
 2fa:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__data_end>
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	32 2f       	mov	r19, r18
 302:	22 27       	eor	r18, r18
 304:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <G_X_l>
 308:	29 2b       	or	r18, r25
 30a:	30 93 38 01 	sts	0x0138, r19	; 0x800138 <G_X+0x1>
 30e:	20 93 37 01 	sts	0x0137, r18	; 0x800137 <G_X>
		G_Y = ((G_Y_h << 8) | G_Y_l);
 312:	20 91 73 01 	lds	r18, 0x0173	; 0x800173 <G_Y_h>
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	32 2f       	mov	r19, r18
 31a:	22 27       	eor	r18, r18
 31c:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <G_Y_l>
 320:	29 2b       	or	r18, r25
 322:	30 93 75 01 	sts	0x0175, r19	; 0x800175 <G_Y+0x1>
 326:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <G_Y>
		G_Z = ((G_Z_h << 8) | G_Z_l);
 32a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <G_Z_h>
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	92 2b       	or	r25, r18
 332:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <G_Z+0x1>
 336:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <G_Z>

		temp_h = TWI_RD(0xd0, 0x41);
 33a:	61 e4       	ldi	r22, 0x41	; 65
 33c:	80 ed       	ldi	r24, 0xD0	; 208
 33e:	e1 de       	rcall	.-574    	; 0x102 <TWI_RD>
 340:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <temp_h>
		temp_l = TWI_RD(0xd0, 0x41);
 344:	61 e4       	ldi	r22, 0x41	; 65
 346:	80 ed       	ldi	r24, 0xD0	; 208
 348:	dc de       	rcall	.-584    	; 0x102 <TWI_RD>
 34a:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <temp_l>
		temp = ((temp_h << 8) | temp_l);
 34e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <temp_h>
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	92 2b       	or	r25, r18
 356:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <temp+0x1>
 35a:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <temp>
		if(turn==10)
 35e:	1a 30       	cpi	r17, 0x0A	; 10
 360:	09 f0       	breq	.+2      	; 0x364 <main+0x146>
 362:	5d c0       	rjmp	.+186    	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
		{
			
			if((abs(G_X)>=1000)||(abs(G_Y)>=1000)||(abs(G_Z)>=1000))
 364:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <G_X>
 368:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <G_X+0x1>
 36c:	99 23       	and	r25, r25
 36e:	1c f4       	brge	.+6      	; 0x376 <main+0x158>
 370:	91 95       	neg	r25
 372:	81 95       	neg	r24
 374:	91 09       	sbc	r25, r1
 376:	88 3e       	cpi	r24, 0xE8	; 232
 378:	93 40       	sbci	r25, 0x03	; 3
 37a:	c4 f4       	brge	.+48     	; 0x3ac <main+0x18e>
 37c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <G_Y>
 380:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <G_Y+0x1>
 384:	99 23       	and	r25, r25
 386:	1c f4       	brge	.+6      	; 0x38e <main+0x170>
 388:	91 95       	neg	r25
 38a:	81 95       	neg	r24
 38c:	91 09       	sbc	r25, r1
 38e:	88 3e       	cpi	r24, 0xE8	; 232
 390:	93 40       	sbci	r25, 0x03	; 3
 392:	64 f4       	brge	.+24     	; 0x3ac <main+0x18e>
 394:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <G_Z>
 398:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <G_Z+0x1>
 39c:	99 23       	and	r25, r25
 39e:	1c f4       	brge	.+6      	; 0x3a6 <main+0x188>
 3a0:	91 95       	neg	r25
 3a2:	81 95       	neg	r24
 3a4:	91 09       	sbc	r25, r1
 3a6:	88 3e       	cpi	r24, 0xE8	; 232
 3a8:	93 40       	sbci	r25, 0x03	; 3
 3aa:	c4 f1       	brlt	.+112    	; 0x41c <__FUSE_REGION_LENGTH__+0x1c>
			{
				PORTA = 0x01;
 3ac:	db ba       	out	0x1b, r13	; 27
 3ae:	8f ef       	ldi	r24, 0xFF	; 255
 3b0:	99 e6       	ldi	r25, 0x69	; 105
 3b2:	28 e1       	ldi	r18, 0x18	; 24
 3b4:	81 50       	subi	r24, 0x01	; 1
 3b6:	90 40       	sbci	r25, 0x00	; 0
 3b8:	20 40       	sbci	r18, 0x00	; 0
 3ba:	e1 f7       	brne	.-8      	; 0x3b4 <main+0x196>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <main+0x1a0>
 3be:	00 00       	nop
				_delay_ms(500);
				PORTA = 0x00;	
 3c0:	1b ba       	out	0x1b, r1	; 27
				sprintf((char*)str1, " G_X = %3.2d, G_Y = %3.2d, G_Z = %3.2d, Temp = %3.2d", G_X,G_Y,G_Z,temp);
 3c2:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <temp+0x1>
 3c6:	8f 93       	push	r24
 3c8:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <temp>
 3cc:	8f 93       	push	r24
 3ce:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <G_Z+0x1>
 3d2:	8f 93       	push	r24
 3d4:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <G_Z>
 3d8:	8f 93       	push	r24
 3da:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <G_Y+0x1>
 3de:	8f 93       	push	r24
 3e0:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <G_Y>
 3e4:	8f 93       	push	r24
 3e6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <G_X+0x1>
 3ea:	8f 93       	push	r24
 3ec:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <G_X>
 3f0:	8f 93       	push	r24
 3f2:	bf 92       	push	r11
 3f4:	af 92       	push	r10
 3f6:	df 93       	push	r29
 3f8:	cf 93       	push	r28
 3fa:	13 d0       	rcall	.+38     	; 0x422 <sprintf>
				Uart_Tx_Str(str1);
 3fc:	ce 01       	movw	r24, r28
 3fe:	73 de       	rcall	.-794    	; 0xe6 <Uart_Tx_Str>
				Uart_Tx('\n');
 400:	8a e0       	ldi	r24, 0x0A	; 10
 402:	6d de       	rcall	.-806    	; 0xde <Uart_Tx>
				Uart_Tx('\r');
 404:	8d e0       	ldi	r24, 0x0D	; 13
 406:	6b de       	rcall	.-810    	; 0xde <Uart_Tx>
 408:	8d b7       	in	r24, 0x3d	; 61
 40a:	9e b7       	in	r25, 0x3e	; 62
 40c:	0c 96       	adiw	r24, 0x0c	; 12
 40e:	0f b6       	in	r0, 0x3f	; 63
 410:	f8 94       	cli
 412:	9e bf       	out	0x3e, r25	; 62
 414:	0f be       	out	0x3f, r0	; 63
 416:	8d bf       	out	0x3d, r24	; 61
			/*if(abs(temp))
			{
				
			}
			*/
			turn=0;
 418:	1e 2d       	mov	r17, r14
 41a:	01 c0       	rjmp	.+2      	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
 41c:	1e 2d       	mov	r17, r14
			
		}
		
	
		turn++;
 41e:	1f 5f       	subi	r17, 0xFF	; 255
		

	}
 420:	4e cf       	rjmp	.-356    	; 0x2be <main+0xa0>

00000422 <sprintf>:
 422:	0f 93       	push	r16
 424:	1f 93       	push	r17
 426:	cf 93       	push	r28
 428:	df 93       	push	r29
 42a:	cd b7       	in	r28, 0x3d	; 61
 42c:	de b7       	in	r29, 0x3e	; 62
 42e:	2e 97       	sbiw	r28, 0x0e	; 14
 430:	0f b6       	in	r0, 0x3f	; 63
 432:	f8 94       	cli
 434:	de bf       	out	0x3e, r29	; 62
 436:	0f be       	out	0x3f, r0	; 63
 438:	cd bf       	out	0x3d, r28	; 61
 43a:	0d 89       	ldd	r16, Y+21	; 0x15
 43c:	1e 89       	ldd	r17, Y+22	; 0x16
 43e:	86 e0       	ldi	r24, 0x06	; 6
 440:	8c 83       	std	Y+4, r24	; 0x04
 442:	1a 83       	std	Y+2, r17	; 0x02
 444:	09 83       	std	Y+1, r16	; 0x01
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	9f e7       	ldi	r25, 0x7F	; 127
 44a:	9e 83       	std	Y+6, r25	; 0x06
 44c:	8d 83       	std	Y+5, r24	; 0x05
 44e:	ae 01       	movw	r20, r28
 450:	47 5e       	subi	r20, 0xE7	; 231
 452:	5f 4f       	sbci	r21, 0xFF	; 255
 454:	6f 89       	ldd	r22, Y+23	; 0x17
 456:	78 8d       	ldd	r23, Y+24	; 0x18
 458:	ce 01       	movw	r24, r28
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	11 d0       	rcall	.+34     	; 0x480 <vfprintf>
 45e:	2f 81       	ldd	r18, Y+7	; 0x07
 460:	38 85       	ldd	r19, Y+8	; 0x08
 462:	f8 01       	movw	r30, r16
 464:	e2 0f       	add	r30, r18
 466:	f3 1f       	adc	r31, r19
 468:	10 82       	st	Z, r1
 46a:	2e 96       	adiw	r28, 0x0e	; 14
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	1f 91       	pop	r17
 47c:	0f 91       	pop	r16
 47e:	08 95       	ret

00000480 <vfprintf>:
 480:	2f 92       	push	r2
 482:	3f 92       	push	r3
 484:	4f 92       	push	r4
 486:	5f 92       	push	r5
 488:	6f 92       	push	r6
 48a:	7f 92       	push	r7
 48c:	8f 92       	push	r8
 48e:	9f 92       	push	r9
 490:	af 92       	push	r10
 492:	bf 92       	push	r11
 494:	cf 92       	push	r12
 496:	df 92       	push	r13
 498:	ef 92       	push	r14
 49a:	ff 92       	push	r15
 49c:	0f 93       	push	r16
 49e:	1f 93       	push	r17
 4a0:	cf 93       	push	r28
 4a2:	df 93       	push	r29
 4a4:	cd b7       	in	r28, 0x3d	; 61
 4a6:	de b7       	in	r29, 0x3e	; 62
 4a8:	2c 97       	sbiw	r28, 0x0c	; 12
 4aa:	0f b6       	in	r0, 0x3f	; 63
 4ac:	f8 94       	cli
 4ae:	de bf       	out	0x3e, r29	; 62
 4b0:	0f be       	out	0x3f, r0	; 63
 4b2:	cd bf       	out	0x3d, r28	; 61
 4b4:	7c 01       	movw	r14, r24
 4b6:	6b 01       	movw	r12, r22
 4b8:	8a 01       	movw	r16, r20
 4ba:	fc 01       	movw	r30, r24
 4bc:	17 82       	std	Z+7, r1	; 0x07
 4be:	16 82       	std	Z+6, r1	; 0x06
 4c0:	83 81       	ldd	r24, Z+3	; 0x03
 4c2:	81 ff       	sbrs	r24, 1
 4c4:	b0 c1       	rjmp	.+864    	; 0x826 <vfprintf+0x3a6>
 4c6:	ce 01       	movw	r24, r28
 4c8:	01 96       	adiw	r24, 0x01	; 1
 4ca:	4c 01       	movw	r8, r24
 4cc:	f7 01       	movw	r30, r14
 4ce:	93 81       	ldd	r25, Z+3	; 0x03
 4d0:	f6 01       	movw	r30, r12
 4d2:	93 fd       	sbrc	r25, 3
 4d4:	85 91       	lpm	r24, Z+
 4d6:	93 ff       	sbrs	r25, 3
 4d8:	81 91       	ld	r24, Z+
 4da:	6f 01       	movw	r12, r30
 4dc:	88 23       	and	r24, r24
 4de:	09 f4       	brne	.+2      	; 0x4e2 <vfprintf+0x62>
 4e0:	9e c1       	rjmp	.+828    	; 0x81e <vfprintf+0x39e>
 4e2:	85 32       	cpi	r24, 0x25	; 37
 4e4:	39 f4       	brne	.+14     	; 0x4f4 <vfprintf+0x74>
 4e6:	93 fd       	sbrc	r25, 3
 4e8:	85 91       	lpm	r24, Z+
 4ea:	93 ff       	sbrs	r25, 3
 4ec:	81 91       	ld	r24, Z+
 4ee:	6f 01       	movw	r12, r30
 4f0:	85 32       	cpi	r24, 0x25	; 37
 4f2:	21 f4       	brne	.+8      	; 0x4fc <vfprintf+0x7c>
 4f4:	b7 01       	movw	r22, r14
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	c7 d1       	rcall	.+910    	; 0x888 <fputc>
 4fa:	e8 cf       	rjmp	.-48     	; 0x4cc <vfprintf+0x4c>
 4fc:	51 2c       	mov	r5, r1
 4fe:	31 2c       	mov	r3, r1
 500:	20 e0       	ldi	r18, 0x00	; 0
 502:	20 32       	cpi	r18, 0x20	; 32
 504:	a0 f4       	brcc	.+40     	; 0x52e <vfprintf+0xae>
 506:	8b 32       	cpi	r24, 0x2B	; 43
 508:	69 f0       	breq	.+26     	; 0x524 <vfprintf+0xa4>
 50a:	30 f4       	brcc	.+12     	; 0x518 <vfprintf+0x98>
 50c:	80 32       	cpi	r24, 0x20	; 32
 50e:	59 f0       	breq	.+22     	; 0x526 <vfprintf+0xa6>
 510:	83 32       	cpi	r24, 0x23	; 35
 512:	69 f4       	brne	.+26     	; 0x52e <vfprintf+0xae>
 514:	20 61       	ori	r18, 0x10	; 16
 516:	2c c0       	rjmp	.+88     	; 0x570 <vfprintf+0xf0>
 518:	8d 32       	cpi	r24, 0x2D	; 45
 51a:	39 f0       	breq	.+14     	; 0x52a <vfprintf+0xaa>
 51c:	80 33       	cpi	r24, 0x30	; 48
 51e:	39 f4       	brne	.+14     	; 0x52e <vfprintf+0xae>
 520:	21 60       	ori	r18, 0x01	; 1
 522:	26 c0       	rjmp	.+76     	; 0x570 <vfprintf+0xf0>
 524:	22 60       	ori	r18, 0x02	; 2
 526:	24 60       	ori	r18, 0x04	; 4
 528:	23 c0       	rjmp	.+70     	; 0x570 <vfprintf+0xf0>
 52a:	28 60       	ori	r18, 0x08	; 8
 52c:	21 c0       	rjmp	.+66     	; 0x570 <vfprintf+0xf0>
 52e:	27 fd       	sbrc	r18, 7
 530:	27 c0       	rjmp	.+78     	; 0x580 <vfprintf+0x100>
 532:	30 ed       	ldi	r19, 0xD0	; 208
 534:	38 0f       	add	r19, r24
 536:	3a 30       	cpi	r19, 0x0A	; 10
 538:	78 f4       	brcc	.+30     	; 0x558 <vfprintf+0xd8>
 53a:	26 ff       	sbrs	r18, 6
 53c:	06 c0       	rjmp	.+12     	; 0x54a <vfprintf+0xca>
 53e:	fa e0       	ldi	r31, 0x0A	; 10
 540:	5f 9e       	mul	r5, r31
 542:	30 0d       	add	r19, r0
 544:	11 24       	eor	r1, r1
 546:	53 2e       	mov	r5, r19
 548:	13 c0       	rjmp	.+38     	; 0x570 <vfprintf+0xf0>
 54a:	8a e0       	ldi	r24, 0x0A	; 10
 54c:	38 9e       	mul	r3, r24
 54e:	30 0d       	add	r19, r0
 550:	11 24       	eor	r1, r1
 552:	33 2e       	mov	r3, r19
 554:	20 62       	ori	r18, 0x20	; 32
 556:	0c c0       	rjmp	.+24     	; 0x570 <vfprintf+0xf0>
 558:	8e 32       	cpi	r24, 0x2E	; 46
 55a:	21 f4       	brne	.+8      	; 0x564 <vfprintf+0xe4>
 55c:	26 fd       	sbrc	r18, 6
 55e:	5f c1       	rjmp	.+702    	; 0x81e <vfprintf+0x39e>
 560:	20 64       	ori	r18, 0x40	; 64
 562:	06 c0       	rjmp	.+12     	; 0x570 <vfprintf+0xf0>
 564:	8c 36       	cpi	r24, 0x6C	; 108
 566:	11 f4       	brne	.+4      	; 0x56c <vfprintf+0xec>
 568:	20 68       	ori	r18, 0x80	; 128
 56a:	02 c0       	rjmp	.+4      	; 0x570 <vfprintf+0xf0>
 56c:	88 36       	cpi	r24, 0x68	; 104
 56e:	41 f4       	brne	.+16     	; 0x580 <vfprintf+0x100>
 570:	f6 01       	movw	r30, r12
 572:	93 fd       	sbrc	r25, 3
 574:	85 91       	lpm	r24, Z+
 576:	93 ff       	sbrs	r25, 3
 578:	81 91       	ld	r24, Z+
 57a:	6f 01       	movw	r12, r30
 57c:	81 11       	cpse	r24, r1
 57e:	c1 cf       	rjmp	.-126    	; 0x502 <vfprintf+0x82>
 580:	98 2f       	mov	r25, r24
 582:	9f 7d       	andi	r25, 0xDF	; 223
 584:	95 54       	subi	r25, 0x45	; 69
 586:	93 30       	cpi	r25, 0x03	; 3
 588:	28 f4       	brcc	.+10     	; 0x594 <vfprintf+0x114>
 58a:	0c 5f       	subi	r16, 0xFC	; 252
 58c:	1f 4f       	sbci	r17, 0xFF	; 255
 58e:	ff e3       	ldi	r31, 0x3F	; 63
 590:	f9 83       	std	Y+1, r31	; 0x01
 592:	0d c0       	rjmp	.+26     	; 0x5ae <vfprintf+0x12e>
 594:	83 36       	cpi	r24, 0x63	; 99
 596:	31 f0       	breq	.+12     	; 0x5a4 <vfprintf+0x124>
 598:	83 37       	cpi	r24, 0x73	; 115
 59a:	71 f0       	breq	.+28     	; 0x5b8 <vfprintf+0x138>
 59c:	83 35       	cpi	r24, 0x53	; 83
 59e:	09 f0       	breq	.+2      	; 0x5a2 <vfprintf+0x122>
 5a0:	57 c0       	rjmp	.+174    	; 0x650 <vfprintf+0x1d0>
 5a2:	21 c0       	rjmp	.+66     	; 0x5e6 <vfprintf+0x166>
 5a4:	f8 01       	movw	r30, r16
 5a6:	80 81       	ld	r24, Z
 5a8:	89 83       	std	Y+1, r24	; 0x01
 5aa:	0e 5f       	subi	r16, 0xFE	; 254
 5ac:	1f 4f       	sbci	r17, 0xFF	; 255
 5ae:	44 24       	eor	r4, r4
 5b0:	43 94       	inc	r4
 5b2:	51 2c       	mov	r5, r1
 5b4:	54 01       	movw	r10, r8
 5b6:	14 c0       	rjmp	.+40     	; 0x5e0 <vfprintf+0x160>
 5b8:	38 01       	movw	r6, r16
 5ba:	f2 e0       	ldi	r31, 0x02	; 2
 5bc:	6f 0e       	add	r6, r31
 5be:	71 1c       	adc	r7, r1
 5c0:	f8 01       	movw	r30, r16
 5c2:	a0 80       	ld	r10, Z
 5c4:	b1 80       	ldd	r11, Z+1	; 0x01
 5c6:	26 ff       	sbrs	r18, 6
 5c8:	03 c0       	rjmp	.+6      	; 0x5d0 <vfprintf+0x150>
 5ca:	65 2d       	mov	r22, r5
 5cc:	70 e0       	ldi	r23, 0x00	; 0
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <vfprintf+0x154>
 5d0:	6f ef       	ldi	r22, 0xFF	; 255
 5d2:	7f ef       	ldi	r23, 0xFF	; 255
 5d4:	c5 01       	movw	r24, r10
 5d6:	2c 87       	std	Y+12, r18	; 0x0c
 5d8:	4c d1       	rcall	.+664    	; 0x872 <strnlen>
 5da:	2c 01       	movw	r4, r24
 5dc:	83 01       	movw	r16, r6
 5de:	2c 85       	ldd	r18, Y+12	; 0x0c
 5e0:	2f 77       	andi	r18, 0x7F	; 127
 5e2:	22 2e       	mov	r2, r18
 5e4:	16 c0       	rjmp	.+44     	; 0x612 <vfprintf+0x192>
 5e6:	38 01       	movw	r6, r16
 5e8:	f2 e0       	ldi	r31, 0x02	; 2
 5ea:	6f 0e       	add	r6, r31
 5ec:	71 1c       	adc	r7, r1
 5ee:	f8 01       	movw	r30, r16
 5f0:	a0 80       	ld	r10, Z
 5f2:	b1 80       	ldd	r11, Z+1	; 0x01
 5f4:	26 ff       	sbrs	r18, 6
 5f6:	03 c0       	rjmp	.+6      	; 0x5fe <vfprintf+0x17e>
 5f8:	65 2d       	mov	r22, r5
 5fa:	70 e0       	ldi	r23, 0x00	; 0
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <vfprintf+0x182>
 5fe:	6f ef       	ldi	r22, 0xFF	; 255
 600:	7f ef       	ldi	r23, 0xFF	; 255
 602:	c5 01       	movw	r24, r10
 604:	2c 87       	std	Y+12, r18	; 0x0c
 606:	2a d1       	rcall	.+596    	; 0x85c <strnlen_P>
 608:	2c 01       	movw	r4, r24
 60a:	2c 85       	ldd	r18, Y+12	; 0x0c
 60c:	20 68       	ori	r18, 0x80	; 128
 60e:	22 2e       	mov	r2, r18
 610:	83 01       	movw	r16, r6
 612:	23 fc       	sbrc	r2, 3
 614:	19 c0       	rjmp	.+50     	; 0x648 <vfprintf+0x1c8>
 616:	83 2d       	mov	r24, r3
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	48 16       	cp	r4, r24
 61c:	59 06       	cpc	r5, r25
 61e:	a0 f4       	brcc	.+40     	; 0x648 <vfprintf+0x1c8>
 620:	b7 01       	movw	r22, r14
 622:	80 e2       	ldi	r24, 0x20	; 32
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	30 d1       	rcall	.+608    	; 0x888 <fputc>
 628:	3a 94       	dec	r3
 62a:	f5 cf       	rjmp	.-22     	; 0x616 <vfprintf+0x196>
 62c:	f5 01       	movw	r30, r10
 62e:	27 fc       	sbrc	r2, 7
 630:	85 91       	lpm	r24, Z+
 632:	27 fe       	sbrs	r2, 7
 634:	81 91       	ld	r24, Z+
 636:	5f 01       	movw	r10, r30
 638:	b7 01       	movw	r22, r14
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	25 d1       	rcall	.+586    	; 0x888 <fputc>
 63e:	31 10       	cpse	r3, r1
 640:	3a 94       	dec	r3
 642:	f1 e0       	ldi	r31, 0x01	; 1
 644:	4f 1a       	sub	r4, r31
 646:	51 08       	sbc	r5, r1
 648:	41 14       	cp	r4, r1
 64a:	51 04       	cpc	r5, r1
 64c:	79 f7       	brne	.-34     	; 0x62c <vfprintf+0x1ac>
 64e:	de c0       	rjmp	.+444    	; 0x80c <vfprintf+0x38c>
 650:	84 36       	cpi	r24, 0x64	; 100
 652:	11 f0       	breq	.+4      	; 0x658 <vfprintf+0x1d8>
 654:	89 36       	cpi	r24, 0x69	; 105
 656:	31 f5       	brne	.+76     	; 0x6a4 <vfprintf+0x224>
 658:	f8 01       	movw	r30, r16
 65a:	27 ff       	sbrs	r18, 7
 65c:	07 c0       	rjmp	.+14     	; 0x66c <vfprintf+0x1ec>
 65e:	60 81       	ld	r22, Z
 660:	71 81       	ldd	r23, Z+1	; 0x01
 662:	82 81       	ldd	r24, Z+2	; 0x02
 664:	93 81       	ldd	r25, Z+3	; 0x03
 666:	0c 5f       	subi	r16, 0xFC	; 252
 668:	1f 4f       	sbci	r17, 0xFF	; 255
 66a:	08 c0       	rjmp	.+16     	; 0x67c <vfprintf+0x1fc>
 66c:	60 81       	ld	r22, Z
 66e:	71 81       	ldd	r23, Z+1	; 0x01
 670:	07 2e       	mov	r0, r23
 672:	00 0c       	add	r0, r0
 674:	88 0b       	sbc	r24, r24
 676:	99 0b       	sbc	r25, r25
 678:	0e 5f       	subi	r16, 0xFE	; 254
 67a:	1f 4f       	sbci	r17, 0xFF	; 255
 67c:	2f 76       	andi	r18, 0x6F	; 111
 67e:	72 2e       	mov	r7, r18
 680:	97 ff       	sbrs	r25, 7
 682:	09 c0       	rjmp	.+18     	; 0x696 <vfprintf+0x216>
 684:	90 95       	com	r25
 686:	80 95       	com	r24
 688:	70 95       	com	r23
 68a:	61 95       	neg	r22
 68c:	7f 4f       	sbci	r23, 0xFF	; 255
 68e:	8f 4f       	sbci	r24, 0xFF	; 255
 690:	9f 4f       	sbci	r25, 0xFF	; 255
 692:	20 68       	ori	r18, 0x80	; 128
 694:	72 2e       	mov	r7, r18
 696:	2a e0       	ldi	r18, 0x0A	; 10
 698:	30 e0       	ldi	r19, 0x00	; 0
 69a:	a4 01       	movw	r20, r8
 69c:	2d d1       	rcall	.+602    	; 0x8f8 <__ultoa_invert>
 69e:	a8 2e       	mov	r10, r24
 6a0:	a8 18       	sub	r10, r8
 6a2:	43 c0       	rjmp	.+134    	; 0x72a <vfprintf+0x2aa>
 6a4:	85 37       	cpi	r24, 0x75	; 117
 6a6:	29 f4       	brne	.+10     	; 0x6b2 <vfprintf+0x232>
 6a8:	2f 7e       	andi	r18, 0xEF	; 239
 6aa:	b2 2e       	mov	r11, r18
 6ac:	2a e0       	ldi	r18, 0x0A	; 10
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	25 c0       	rjmp	.+74     	; 0x6fc <vfprintf+0x27c>
 6b2:	f2 2f       	mov	r31, r18
 6b4:	f9 7f       	andi	r31, 0xF9	; 249
 6b6:	bf 2e       	mov	r11, r31
 6b8:	8f 36       	cpi	r24, 0x6F	; 111
 6ba:	c1 f0       	breq	.+48     	; 0x6ec <vfprintf+0x26c>
 6bc:	18 f4       	brcc	.+6      	; 0x6c4 <vfprintf+0x244>
 6be:	88 35       	cpi	r24, 0x58	; 88
 6c0:	79 f0       	breq	.+30     	; 0x6e0 <vfprintf+0x260>
 6c2:	ad c0       	rjmp	.+346    	; 0x81e <vfprintf+0x39e>
 6c4:	80 37       	cpi	r24, 0x70	; 112
 6c6:	19 f0       	breq	.+6      	; 0x6ce <vfprintf+0x24e>
 6c8:	88 37       	cpi	r24, 0x78	; 120
 6ca:	21 f0       	breq	.+8      	; 0x6d4 <vfprintf+0x254>
 6cc:	a8 c0       	rjmp	.+336    	; 0x81e <vfprintf+0x39e>
 6ce:	2f 2f       	mov	r18, r31
 6d0:	20 61       	ori	r18, 0x10	; 16
 6d2:	b2 2e       	mov	r11, r18
 6d4:	b4 fe       	sbrs	r11, 4
 6d6:	0d c0       	rjmp	.+26     	; 0x6f2 <vfprintf+0x272>
 6d8:	8b 2d       	mov	r24, r11
 6da:	84 60       	ori	r24, 0x04	; 4
 6dc:	b8 2e       	mov	r11, r24
 6de:	09 c0       	rjmp	.+18     	; 0x6f2 <vfprintf+0x272>
 6e0:	24 ff       	sbrs	r18, 4
 6e2:	0a c0       	rjmp	.+20     	; 0x6f8 <vfprintf+0x278>
 6e4:	9f 2f       	mov	r25, r31
 6e6:	96 60       	ori	r25, 0x06	; 6
 6e8:	b9 2e       	mov	r11, r25
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <vfprintf+0x278>
 6ec:	28 e0       	ldi	r18, 0x08	; 8
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	05 c0       	rjmp	.+10     	; 0x6fc <vfprintf+0x27c>
 6f2:	20 e1       	ldi	r18, 0x10	; 16
 6f4:	30 e0       	ldi	r19, 0x00	; 0
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <vfprintf+0x27c>
 6f8:	20 e1       	ldi	r18, 0x10	; 16
 6fa:	32 e0       	ldi	r19, 0x02	; 2
 6fc:	f8 01       	movw	r30, r16
 6fe:	b7 fe       	sbrs	r11, 7
 700:	07 c0       	rjmp	.+14     	; 0x710 <vfprintf+0x290>
 702:	60 81       	ld	r22, Z
 704:	71 81       	ldd	r23, Z+1	; 0x01
 706:	82 81       	ldd	r24, Z+2	; 0x02
 708:	93 81       	ldd	r25, Z+3	; 0x03
 70a:	0c 5f       	subi	r16, 0xFC	; 252
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	06 c0       	rjmp	.+12     	; 0x71c <vfprintf+0x29c>
 710:	60 81       	ld	r22, Z
 712:	71 81       	ldd	r23, Z+1	; 0x01
 714:	80 e0       	ldi	r24, 0x00	; 0
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 5f       	subi	r16, 0xFE	; 254
 71a:	1f 4f       	sbci	r17, 0xFF	; 255
 71c:	a4 01       	movw	r20, r8
 71e:	ec d0       	rcall	.+472    	; 0x8f8 <__ultoa_invert>
 720:	a8 2e       	mov	r10, r24
 722:	a8 18       	sub	r10, r8
 724:	fb 2d       	mov	r31, r11
 726:	ff 77       	andi	r31, 0x7F	; 127
 728:	7f 2e       	mov	r7, r31
 72a:	76 fe       	sbrs	r7, 6
 72c:	0b c0       	rjmp	.+22     	; 0x744 <vfprintf+0x2c4>
 72e:	37 2d       	mov	r19, r7
 730:	3e 7f       	andi	r19, 0xFE	; 254
 732:	a5 14       	cp	r10, r5
 734:	50 f4       	brcc	.+20     	; 0x74a <vfprintf+0x2ca>
 736:	74 fe       	sbrs	r7, 4
 738:	0a c0       	rjmp	.+20     	; 0x74e <vfprintf+0x2ce>
 73a:	72 fc       	sbrc	r7, 2
 73c:	08 c0       	rjmp	.+16     	; 0x74e <vfprintf+0x2ce>
 73e:	37 2d       	mov	r19, r7
 740:	3e 7e       	andi	r19, 0xEE	; 238
 742:	05 c0       	rjmp	.+10     	; 0x74e <vfprintf+0x2ce>
 744:	ba 2c       	mov	r11, r10
 746:	37 2d       	mov	r19, r7
 748:	03 c0       	rjmp	.+6      	; 0x750 <vfprintf+0x2d0>
 74a:	ba 2c       	mov	r11, r10
 74c:	01 c0       	rjmp	.+2      	; 0x750 <vfprintf+0x2d0>
 74e:	b5 2c       	mov	r11, r5
 750:	34 ff       	sbrs	r19, 4
 752:	0d c0       	rjmp	.+26     	; 0x76e <vfprintf+0x2ee>
 754:	fe 01       	movw	r30, r28
 756:	ea 0d       	add	r30, r10
 758:	f1 1d       	adc	r31, r1
 75a:	80 81       	ld	r24, Z
 75c:	80 33       	cpi	r24, 0x30	; 48
 75e:	11 f4       	brne	.+4      	; 0x764 <vfprintf+0x2e4>
 760:	39 7e       	andi	r19, 0xE9	; 233
 762:	09 c0       	rjmp	.+18     	; 0x776 <vfprintf+0x2f6>
 764:	32 ff       	sbrs	r19, 2
 766:	06 c0       	rjmp	.+12     	; 0x774 <vfprintf+0x2f4>
 768:	b3 94       	inc	r11
 76a:	b3 94       	inc	r11
 76c:	04 c0       	rjmp	.+8      	; 0x776 <vfprintf+0x2f6>
 76e:	83 2f       	mov	r24, r19
 770:	86 78       	andi	r24, 0x86	; 134
 772:	09 f0       	breq	.+2      	; 0x776 <vfprintf+0x2f6>
 774:	b3 94       	inc	r11
 776:	33 fd       	sbrc	r19, 3
 778:	12 c0       	rjmp	.+36     	; 0x79e <vfprintf+0x31e>
 77a:	30 ff       	sbrs	r19, 0
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0x30a>
 77e:	5a 2c       	mov	r5, r10
 780:	b3 14       	cp	r11, r3
 782:	18 f4       	brcc	.+6      	; 0x78a <vfprintf+0x30a>
 784:	53 0c       	add	r5, r3
 786:	5b 18       	sub	r5, r11
 788:	b3 2c       	mov	r11, r3
 78a:	b3 14       	cp	r11, r3
 78c:	60 f4       	brcc	.+24     	; 0x7a6 <vfprintf+0x326>
 78e:	b7 01       	movw	r22, r14
 790:	80 e2       	ldi	r24, 0x20	; 32
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	3c 87       	std	Y+12, r19	; 0x0c
 796:	78 d0       	rcall	.+240    	; 0x888 <fputc>
 798:	b3 94       	inc	r11
 79a:	3c 85       	ldd	r19, Y+12	; 0x0c
 79c:	f6 cf       	rjmp	.-20     	; 0x78a <vfprintf+0x30a>
 79e:	b3 14       	cp	r11, r3
 7a0:	10 f4       	brcc	.+4      	; 0x7a6 <vfprintf+0x326>
 7a2:	3b 18       	sub	r3, r11
 7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <vfprintf+0x328>
 7a6:	31 2c       	mov	r3, r1
 7a8:	34 ff       	sbrs	r19, 4
 7aa:	11 c0       	rjmp	.+34     	; 0x7ce <vfprintf+0x34e>
 7ac:	b7 01       	movw	r22, r14
 7ae:	80 e3       	ldi	r24, 0x30	; 48
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	3c 87       	std	Y+12, r19	; 0x0c
 7b4:	69 d0       	rcall	.+210    	; 0x888 <fputc>
 7b6:	3c 85       	ldd	r19, Y+12	; 0x0c
 7b8:	32 ff       	sbrs	r19, 2
 7ba:	16 c0       	rjmp	.+44     	; 0x7e8 <vfprintf+0x368>
 7bc:	31 fd       	sbrc	r19, 1
 7be:	03 c0       	rjmp	.+6      	; 0x7c6 <vfprintf+0x346>
 7c0:	88 e7       	ldi	r24, 0x78	; 120
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <vfprintf+0x34a>
 7c6:	88 e5       	ldi	r24, 0x58	; 88
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	b7 01       	movw	r22, r14
 7cc:	0c c0       	rjmp	.+24     	; 0x7e6 <vfprintf+0x366>
 7ce:	83 2f       	mov	r24, r19
 7d0:	86 78       	andi	r24, 0x86	; 134
 7d2:	51 f0       	breq	.+20     	; 0x7e8 <vfprintf+0x368>
 7d4:	31 ff       	sbrs	r19, 1
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <vfprintf+0x35c>
 7d8:	8b e2       	ldi	r24, 0x2B	; 43
 7da:	01 c0       	rjmp	.+2      	; 0x7de <vfprintf+0x35e>
 7dc:	80 e2       	ldi	r24, 0x20	; 32
 7de:	37 fd       	sbrc	r19, 7
 7e0:	8d e2       	ldi	r24, 0x2D	; 45
 7e2:	b7 01       	movw	r22, r14
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	50 d0       	rcall	.+160    	; 0x888 <fputc>
 7e8:	a5 14       	cp	r10, r5
 7ea:	30 f4       	brcc	.+12     	; 0x7f8 <vfprintf+0x378>
 7ec:	b7 01       	movw	r22, r14
 7ee:	80 e3       	ldi	r24, 0x30	; 48
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	4a d0       	rcall	.+148    	; 0x888 <fputc>
 7f4:	5a 94       	dec	r5
 7f6:	f8 cf       	rjmp	.-16     	; 0x7e8 <vfprintf+0x368>
 7f8:	aa 94       	dec	r10
 7fa:	f4 01       	movw	r30, r8
 7fc:	ea 0d       	add	r30, r10
 7fe:	f1 1d       	adc	r31, r1
 800:	80 81       	ld	r24, Z
 802:	b7 01       	movw	r22, r14
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	40 d0       	rcall	.+128    	; 0x888 <fputc>
 808:	a1 10       	cpse	r10, r1
 80a:	f6 cf       	rjmp	.-20     	; 0x7f8 <vfprintf+0x378>
 80c:	33 20       	and	r3, r3
 80e:	09 f4       	brne	.+2      	; 0x812 <vfprintf+0x392>
 810:	5d ce       	rjmp	.-838    	; 0x4cc <vfprintf+0x4c>
 812:	b7 01       	movw	r22, r14
 814:	80 e2       	ldi	r24, 0x20	; 32
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	37 d0       	rcall	.+110    	; 0x888 <fputc>
 81a:	3a 94       	dec	r3
 81c:	f7 cf       	rjmp	.-18     	; 0x80c <vfprintf+0x38c>
 81e:	f7 01       	movw	r30, r14
 820:	86 81       	ldd	r24, Z+6	; 0x06
 822:	97 81       	ldd	r25, Z+7	; 0x07
 824:	02 c0       	rjmp	.+4      	; 0x82a <vfprintf+0x3aa>
 826:	8f ef       	ldi	r24, 0xFF	; 255
 828:	9f ef       	ldi	r25, 0xFF	; 255
 82a:	2c 96       	adiw	r28, 0x0c	; 12
 82c:	0f b6       	in	r0, 0x3f	; 63
 82e:	f8 94       	cli
 830:	de bf       	out	0x3e, r29	; 62
 832:	0f be       	out	0x3f, r0	; 63
 834:	cd bf       	out	0x3d, r28	; 61
 836:	df 91       	pop	r29
 838:	cf 91       	pop	r28
 83a:	1f 91       	pop	r17
 83c:	0f 91       	pop	r16
 83e:	ff 90       	pop	r15
 840:	ef 90       	pop	r14
 842:	df 90       	pop	r13
 844:	cf 90       	pop	r12
 846:	bf 90       	pop	r11
 848:	af 90       	pop	r10
 84a:	9f 90       	pop	r9
 84c:	8f 90       	pop	r8
 84e:	7f 90       	pop	r7
 850:	6f 90       	pop	r6
 852:	5f 90       	pop	r5
 854:	4f 90       	pop	r4
 856:	3f 90       	pop	r3
 858:	2f 90       	pop	r2
 85a:	08 95       	ret

0000085c <strnlen_P>:
 85c:	fc 01       	movw	r30, r24
 85e:	05 90       	lpm	r0, Z+
 860:	61 50       	subi	r22, 0x01	; 1
 862:	70 40       	sbci	r23, 0x00	; 0
 864:	01 10       	cpse	r0, r1
 866:	d8 f7       	brcc	.-10     	; 0x85e <strnlen_P+0x2>
 868:	80 95       	com	r24
 86a:	90 95       	com	r25
 86c:	8e 0f       	add	r24, r30
 86e:	9f 1f       	adc	r25, r31
 870:	08 95       	ret

00000872 <strnlen>:
 872:	fc 01       	movw	r30, r24
 874:	61 50       	subi	r22, 0x01	; 1
 876:	70 40       	sbci	r23, 0x00	; 0
 878:	01 90       	ld	r0, Z+
 87a:	01 10       	cpse	r0, r1
 87c:	d8 f7       	brcc	.-10     	; 0x874 <strnlen+0x2>
 87e:	80 95       	com	r24
 880:	90 95       	com	r25
 882:	8e 0f       	add	r24, r30
 884:	9f 1f       	adc	r25, r31
 886:	08 95       	ret

00000888 <fputc>:
 888:	0f 93       	push	r16
 88a:	1f 93       	push	r17
 88c:	cf 93       	push	r28
 88e:	df 93       	push	r29
 890:	fb 01       	movw	r30, r22
 892:	23 81       	ldd	r18, Z+3	; 0x03
 894:	21 fd       	sbrc	r18, 1
 896:	03 c0       	rjmp	.+6      	; 0x89e <fputc+0x16>
 898:	8f ef       	ldi	r24, 0xFF	; 255
 89a:	9f ef       	ldi	r25, 0xFF	; 255
 89c:	28 c0       	rjmp	.+80     	; 0x8ee <fputc+0x66>
 89e:	22 ff       	sbrs	r18, 2
 8a0:	16 c0       	rjmp	.+44     	; 0x8ce <fputc+0x46>
 8a2:	46 81       	ldd	r20, Z+6	; 0x06
 8a4:	57 81       	ldd	r21, Z+7	; 0x07
 8a6:	24 81       	ldd	r18, Z+4	; 0x04
 8a8:	35 81       	ldd	r19, Z+5	; 0x05
 8aa:	42 17       	cp	r20, r18
 8ac:	53 07       	cpc	r21, r19
 8ae:	44 f4       	brge	.+16     	; 0x8c0 <fputc+0x38>
 8b0:	a0 81       	ld	r26, Z
 8b2:	b1 81       	ldd	r27, Z+1	; 0x01
 8b4:	9d 01       	movw	r18, r26
 8b6:	2f 5f       	subi	r18, 0xFF	; 255
 8b8:	3f 4f       	sbci	r19, 0xFF	; 255
 8ba:	31 83       	std	Z+1, r19	; 0x01
 8bc:	20 83       	st	Z, r18
 8be:	8c 93       	st	X, r24
 8c0:	26 81       	ldd	r18, Z+6	; 0x06
 8c2:	37 81       	ldd	r19, Z+7	; 0x07
 8c4:	2f 5f       	subi	r18, 0xFF	; 255
 8c6:	3f 4f       	sbci	r19, 0xFF	; 255
 8c8:	37 83       	std	Z+7, r19	; 0x07
 8ca:	26 83       	std	Z+6, r18	; 0x06
 8cc:	10 c0       	rjmp	.+32     	; 0x8ee <fputc+0x66>
 8ce:	eb 01       	movw	r28, r22
 8d0:	09 2f       	mov	r16, r25
 8d2:	18 2f       	mov	r17, r24
 8d4:	00 84       	ldd	r0, Z+8	; 0x08
 8d6:	f1 85       	ldd	r31, Z+9	; 0x09
 8d8:	e0 2d       	mov	r30, r0
 8da:	09 95       	icall
 8dc:	89 2b       	or	r24, r25
 8de:	e1 f6       	brne	.-72     	; 0x898 <fputc+0x10>
 8e0:	8e 81       	ldd	r24, Y+6	; 0x06
 8e2:	9f 81       	ldd	r25, Y+7	; 0x07
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	9f 83       	std	Y+7, r25	; 0x07
 8e8:	8e 83       	std	Y+6, r24	; 0x06
 8ea:	81 2f       	mov	r24, r17
 8ec:	90 2f       	mov	r25, r16
 8ee:	df 91       	pop	r29
 8f0:	cf 91       	pop	r28
 8f2:	1f 91       	pop	r17
 8f4:	0f 91       	pop	r16
 8f6:	08 95       	ret

000008f8 <__ultoa_invert>:
 8f8:	fa 01       	movw	r30, r20
 8fa:	aa 27       	eor	r26, r26
 8fc:	28 30       	cpi	r18, 0x08	; 8
 8fe:	51 f1       	breq	.+84     	; 0x954 <__ultoa_invert+0x5c>
 900:	20 31       	cpi	r18, 0x10	; 16
 902:	81 f1       	breq	.+96     	; 0x964 <__ultoa_invert+0x6c>
 904:	e8 94       	clt
 906:	6f 93       	push	r22
 908:	6e 7f       	andi	r22, 0xFE	; 254
 90a:	6e 5f       	subi	r22, 0xFE	; 254
 90c:	7f 4f       	sbci	r23, 0xFF	; 255
 90e:	8f 4f       	sbci	r24, 0xFF	; 255
 910:	9f 4f       	sbci	r25, 0xFF	; 255
 912:	af 4f       	sbci	r26, 0xFF	; 255
 914:	b1 e0       	ldi	r27, 0x01	; 1
 916:	3e d0       	rcall	.+124    	; 0x994 <__ultoa_invert+0x9c>
 918:	b4 e0       	ldi	r27, 0x04	; 4
 91a:	3c d0       	rcall	.+120    	; 0x994 <__ultoa_invert+0x9c>
 91c:	67 0f       	add	r22, r23
 91e:	78 1f       	adc	r23, r24
 920:	89 1f       	adc	r24, r25
 922:	9a 1f       	adc	r25, r26
 924:	a1 1d       	adc	r26, r1
 926:	68 0f       	add	r22, r24
 928:	79 1f       	adc	r23, r25
 92a:	8a 1f       	adc	r24, r26
 92c:	91 1d       	adc	r25, r1
 92e:	a1 1d       	adc	r26, r1
 930:	6a 0f       	add	r22, r26
 932:	71 1d       	adc	r23, r1
 934:	81 1d       	adc	r24, r1
 936:	91 1d       	adc	r25, r1
 938:	a1 1d       	adc	r26, r1
 93a:	20 d0       	rcall	.+64     	; 0x97c <__ultoa_invert+0x84>
 93c:	09 f4       	brne	.+2      	; 0x940 <__ultoa_invert+0x48>
 93e:	68 94       	set
 940:	3f 91       	pop	r19
 942:	2a e0       	ldi	r18, 0x0A	; 10
 944:	26 9f       	mul	r18, r22
 946:	11 24       	eor	r1, r1
 948:	30 19       	sub	r19, r0
 94a:	30 5d       	subi	r19, 0xD0	; 208
 94c:	31 93       	st	Z+, r19
 94e:	de f6       	brtc	.-74     	; 0x906 <__ultoa_invert+0xe>
 950:	cf 01       	movw	r24, r30
 952:	08 95       	ret
 954:	46 2f       	mov	r20, r22
 956:	47 70       	andi	r20, 0x07	; 7
 958:	40 5d       	subi	r20, 0xD0	; 208
 95a:	41 93       	st	Z+, r20
 95c:	b3 e0       	ldi	r27, 0x03	; 3
 95e:	0f d0       	rcall	.+30     	; 0x97e <__ultoa_invert+0x86>
 960:	c9 f7       	brne	.-14     	; 0x954 <__ultoa_invert+0x5c>
 962:	f6 cf       	rjmp	.-20     	; 0x950 <__ultoa_invert+0x58>
 964:	46 2f       	mov	r20, r22
 966:	4f 70       	andi	r20, 0x0F	; 15
 968:	40 5d       	subi	r20, 0xD0	; 208
 96a:	4a 33       	cpi	r20, 0x3A	; 58
 96c:	18 f0       	brcs	.+6      	; 0x974 <__ultoa_invert+0x7c>
 96e:	49 5d       	subi	r20, 0xD9	; 217
 970:	31 fd       	sbrc	r19, 1
 972:	40 52       	subi	r20, 0x20	; 32
 974:	41 93       	st	Z+, r20
 976:	02 d0       	rcall	.+4      	; 0x97c <__ultoa_invert+0x84>
 978:	a9 f7       	brne	.-22     	; 0x964 <__ultoa_invert+0x6c>
 97a:	ea cf       	rjmp	.-44     	; 0x950 <__ultoa_invert+0x58>
 97c:	b4 e0       	ldi	r27, 0x04	; 4
 97e:	a6 95       	lsr	r26
 980:	97 95       	ror	r25
 982:	87 95       	ror	r24
 984:	77 95       	ror	r23
 986:	67 95       	ror	r22
 988:	ba 95       	dec	r27
 98a:	c9 f7       	brne	.-14     	; 0x97e <__ultoa_invert+0x86>
 98c:	00 97       	sbiw	r24, 0x00	; 0
 98e:	61 05       	cpc	r22, r1
 990:	71 05       	cpc	r23, r1
 992:	08 95       	ret
 994:	9b 01       	movw	r18, r22
 996:	ac 01       	movw	r20, r24
 998:	0a 2e       	mov	r0, r26
 99a:	06 94       	lsr	r0
 99c:	57 95       	ror	r21
 99e:	47 95       	ror	r20
 9a0:	37 95       	ror	r19
 9a2:	27 95       	ror	r18
 9a4:	ba 95       	dec	r27
 9a6:	c9 f7       	brne	.-14     	; 0x99a <__ultoa_invert+0xa2>
 9a8:	62 0f       	add	r22, r18
 9aa:	73 1f       	adc	r23, r19
 9ac:	84 1f       	adc	r24, r20
 9ae:	95 1f       	adc	r25, r21
 9b0:	a0 1d       	adc	r26, r0
 9b2:	08 95       	ret

000009b4 <_exit>:
 9b4:	f8 94       	cli

000009b6 <__stop_program>:
 9b6:	ff cf       	rjmp	.-2      	; 0x9b6 <__stop_program>
